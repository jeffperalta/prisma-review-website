type Query {
    users: [User]
}

type Mutation {
    createUser(data: CreateUserInput!) : User!,
    updateUser(id: ID!, data: UpdateUserInput) : User!,
    deleteUser(id: ID!): User!
}

type Subscription {
    user: UserSubscriptionPayload!
}

type User {
    id: ID!
    username: String!
    name: String!
    email: String!
    age: Int
}

input CreateUserInput {
    username: String!
    name: String!
    email: String!
    age: Int
}

input UpdateUserInput {
    username: String
    name: String
    email: String
    age: Int
}

enum MutationType {
    CREATED
    UPDATED
    DELETED
}

type UserSubscriptionPayload {
    mutation: MutationType!
    data: User!
}